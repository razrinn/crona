{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { summaryUrl, areaUrl, dailyUrl } from \"./url\";\n\nconst fetchData = url => {\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(\"Fetching data...\");\n      const result = await fetch(url).then(response => response.json()).catch(err => err);\n      setData(result);\n    };\n\n    fetchData();\n  }, []);\n  return data;\n};\n\nconst useSummaryStats = () => fetchData(summaryUrl);\n\nconst useProvinceStats = () => fetchData(areaUrl);\n\nconst useLastUpdate = () => {\n  const response = fetchData(dailyUrl);\n  return response ? new Date(response.data[response.data.length - 1].tanggal) : null;\n};\n\nconst usePercentageStats = () => {\n  const response = fetchData(dailyUrl);\n  const recentData = response ? response.data[response.data.length - 1] : null;\n  return recentData ? {\n    perawatan: recentData.persentasePasiendalamPerawatan.toFixed(2),\n    sembuh: recentData.persentasePasienSembuh.toFixed(2),\n    meninggal: recentData.persentasePasienMeninggal.toFixed(2)\n  } : null;\n};\n\nconst useDailyStats = () => fetchData(dailyUrl);\n\nexport { useSummaryStats, useProvinceStats, useLastUpdate, usePercentageStats, useDailyStats };","map":{"version":3,"sources":["/home/razrinn/code/real/coronavirus/utils/fetcher.js"],"names":["useState","useEffect","summaryUrl","areaUrl","dailyUrl","fetchData","url","data","setData","console","log","result","fetch","then","response","json","catch","err","useSummaryStats","useProvinceStats","useLastUpdate","Date","length","tanggal","usePercentageStats","recentData","perawatan","persentasePasiendalamPerawatan","toFixed","sembuh","persentasePasienSembuh","meninggal","persentasePasienMeninggal","useDailyStats"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,QAA9B,QAA8C,OAA9C;;AAEA,MAAMC,SAAS,GAAIC,GAAD,IAAS;AACvB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,EAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMI,SAAS,GAAG,YAAY;AAC1BI,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAACN,GAAD,CAAL,CAChBO,IADgB,CACVC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADH,EAEhBC,KAFgB,CAETC,GAAD,IAASA,GAFC,CAArB;AAGAT,MAAAA,OAAO,CAACG,MAAD,CAAP;AACH,KAND;;AAOAN,IAAAA,SAAS;AACZ,GATQ,EASN,EATM,CAAT;AAUA,SAAOE,IAAP;AACH,CAbD;;AAeA,MAAMW,eAAe,GAAG,MAAMb,SAAS,CAACH,UAAD,CAAvC;;AACA,MAAMiB,gBAAgB,GAAG,MAAMd,SAAS,CAACF,OAAD,CAAxC;;AACA,MAAMiB,aAAa,GAAG,MAAM;AACxB,QAAMN,QAAQ,GAAGT,SAAS,CAACD,QAAD,CAA1B;AACA,SAAOU,QAAQ,GACT,IAAIO,IAAJ,CAASP,QAAQ,CAACP,IAAT,CAAcO,QAAQ,CAACP,IAAT,CAAce,MAAd,GAAuB,CAArC,EAAwCC,OAAjD,CADS,GAET,IAFN;AAGH,CALD;;AAMA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,QAAMV,QAAQ,GAAGT,SAAS,CAACD,QAAD,CAA1B;AACA,QAAMqB,UAAU,GAAGX,QAAQ,GACrBA,QAAQ,CAACP,IAAT,CAAcO,QAAQ,CAACP,IAAT,CAAce,MAAd,GAAuB,CAArC,CADqB,GAErB,IAFN;AAGA,SAAOG,UAAU,GACX;AACIC,IAAAA,SAAS,EAAED,UAAU,CAACE,8BAAX,CAA0CC,OAA1C,CAAkD,CAAlD,CADf;AAEIC,IAAAA,MAAM,EAAEJ,UAAU,CAACK,sBAAX,CAAkCF,OAAlC,CAA0C,CAA1C,CAFZ;AAGIG,IAAAA,SAAS,EAAEN,UAAU,CAACO,yBAAX,CAAqCJ,OAArC,CAA6C,CAA7C;AAHf,GADW,GAMX,IANN;AAOH,CAZD;;AAaA,MAAMK,aAAa,GAAG,MAAM5B,SAAS,CAACD,QAAD,CAArC;;AACA,SACIc,eADJ,EAEIC,gBAFJ,EAGIC,aAHJ,EAIII,kBAJJ,EAKIS,aALJ","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { summaryUrl, areaUrl, dailyUrl } from \"./url\";\n\nconst fetchData = (url) => {\n    const [data, setData] = useState();\n    useEffect(() => {\n        const fetchData = async () => {\n            console.log(\"Fetching data...\");\n            const result = await fetch(url)\n                .then((response) => response.json())\n                .catch((err) => err);\n            setData(result);\n        };\n        fetchData();\n    }, []);\n    return data;\n};\n\nconst useSummaryStats = () => fetchData(summaryUrl);\nconst useProvinceStats = () => fetchData(areaUrl);\nconst useLastUpdate = () => {\n    const response = fetchData(dailyUrl);\n    return response\n        ? new Date(response.data[response.data.length - 1].tanggal)\n        : null;\n};\nconst usePercentageStats = () => {\n    const response = fetchData(dailyUrl);\n    const recentData = response\n        ? response.data[response.data.length - 1]\n        : null;\n    return recentData\n        ? {\n              perawatan: recentData.persentasePasiendalamPerawatan.toFixed(2),\n              sembuh: recentData.persentasePasienSembuh.toFixed(2),\n              meninggal: recentData.persentasePasienMeninggal.toFixed(2),\n          }\n        : null;\n};\nconst useDailyStats = () => fetchData(dailyUrl);\nexport {\n    useSummaryStats,\n    useProvinceStats,\n    useLastUpdate,\n    usePercentageStats,\n    useDailyStats,\n};\n"]},"metadata":{},"sourceType":"module"}